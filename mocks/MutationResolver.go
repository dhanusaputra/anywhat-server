// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	model "github.com/dhanusaputra/anywhat-server/pkg/graph/model"
)

// MutationResolver is an autogenerated mock type for the MutationResolver type
type MutationResolver struct {
	mock.Mock
}

// CreateAnything provides a mock function with given fields: ctx, input
func (_m *MutationResolver) CreateAnything(ctx context.Context, input *model.AnythingInput) (string, error) {
	ret := _m.Called(ctx, input)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, *model.AnythingInput) string); ok {
		r0 = rf(ctx, input)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *model.AnythingInput) error); ok {
		r1 = rf(ctx, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteAnything provides a mock function with given fields: ctx, id
func (_m *MutationResolver) DeleteAnything(ctx context.Context, id string) (bool, error) {
	ret := _m.Called(ctx, id)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, string) bool); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateAnything provides a mock function with given fields: ctx, id, input
func (_m *MutationResolver) UpdateAnything(ctx context.Context, id string, input *model.AnythingInput) (bool, error) {
	ret := _m.Called(ctx, id, input)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, string, *model.AnythingInput) bool); ok {
		r0 = rf(ctx, id, input)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, *model.AnythingInput) error); ok {
		r1 = rf(ctx, id, input)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
